{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","goods","start","isReversed","sortBy","show","setState","reverse","sortAlphabetically","sortByLength","reset","this","visibleGoods","sort","a","b","localeCompare","length","className","classNames","map","good","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sOAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,E,4MACJC,MAAQ,CACNC,MAAOH,EACPI,OAAO,EACPC,YAAY,EACZC,OAAQ,I,EAGVC,KAAO,WACL,EAAKC,SAAS,CAAEJ,OAAO,K,EAGzBK,QAAU,WACR,EAAKD,UAAS,SAAAN,GAAK,MAAK,CACtBG,YAAaH,EAAMG,gB,EAIvBK,mBAAqB,WACnB,EAAKF,SAAS,CACZF,OAAQ,W,EAIZK,aAAe,WACb,EAAKH,SAAS,CACZF,OAAQ,Y,EAIZM,MAAQ,WACN,EAAKJ,SAAS,CACZL,MAAOH,EACPK,YAAY,EACZC,OAAQ,M,4CAIZ,WACE,MAKIO,KAAKX,MAJPE,EADF,EACEA,MACAD,EAFF,EAEEA,MACAG,EAHF,EAGEA,OACAD,EAJF,EAIEA,WAEIS,EAAY,YAAOX,GAmBzB,OAjBIG,GACFQ,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQX,GACN,IAAK,QACH,OAAOU,EAAEE,cAAcD,GACzB,IAAK,SACH,OAAOD,EAAEG,OAASF,EAAEE,OACtB,QACE,OAAO,MAKXd,GACFS,EAAaL,UAIb,qBAAKW,UAAWC,IAAW,MAAO,CAChC,eAAgBjB,EAChB,aAAcA,IAFhB,SAKIA,EAWE,qCACE,oBAAIgB,UAAU,aAAd,SACGN,EAAaQ,KAAI,SAAAC,GAAI,OACpB,oBAAeH,UAAU,mBAAzB,SAA6CG,GAApCA,QAGb,sBAAKH,UAAU,UAAf,UACE,wBACEI,KAAK,SACLC,QAASZ,KAAKJ,QACdW,UAAU,SAHZ,qBAOA,wBACEI,KAAK,SACLC,QAASZ,KAAKH,mBACdU,UAAU,SAHZ,iCAOA,wBACEI,KAAK,SACLC,QAASZ,KAAKF,aACdS,UAAU,SAHZ,4BAOA,wBACEI,KAAK,SACLC,QAASZ,KAAKD,MACdQ,UAAU,SAHZ,yBArCJ,wBACEI,KAAK,SACLC,QAASZ,KAAKN,KACda,UAAU,uBAHZ,yB,GAxEMM,IAAMC,WAoIT1B,ICjJf2B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6143334b.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component<{}, State> {\n  state = {\n    goods: goodsFromServer,\n    start: false,\n    isReversed: false,\n    sortBy: '',\n  };\n\n  show = () => {\n    this.setState({ start: true });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortAlphabetically = () => {\n    this.setState({\n      sortBy: 'alpha',\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortBy: 'length',\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      goods: goodsFromServer,\n      isReversed: false,\n      sortBy: '',\n    });\n  };\n\n  render() {\n    const {\n      start,\n      goods,\n      sortBy,\n      isReversed,\n    } = this.state;\n    const visibleGoods = [...goods];\n\n    if (sortBy) {\n      visibleGoods.sort((a, b) => {\n        switch (sortBy) {\n          case 'alpha':\n            return a.localeCompare(b);\n          case 'length':\n            return a.length - b.length;\n          default:\n            return 0;\n        }\n      });\n    }\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div className={classNames('App', {\n        'App--before': !start,\n        'App--after': start,\n      })}\n      >\n        {!start\n          ? (\n            <button\n              type=\"button\"\n              onClick={this.show}\n              className=\"button button--start\"\n            >\n              Start\n            </button>\n          )\n          : (\n            <>\n              <ul className=\"goods-list\">\n                {visibleGoods.map(good => (\n                  <li key={good} className=\"goods-list__item\">{good}</li>\n                ))}\n              </ul>\n              <div className=\"buttons\">\n                <button\n                  type=\"button\"\n                  onClick={this.reverse}\n                  className=\"button\"\n                >\n                  reverse\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={this.sortAlphabetically}\n                  className=\"button\"\n                >\n                  Sort alphabetically\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={this.sortByLength}\n                  className=\"button\"\n                >\n                  Sort by length\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={this.reset}\n                  className=\"button\"\n                >\n                  Reset\n                </button>\n              </div>\n            </>\n          )}\n\n      </div>\n    );\n  }\n}\n\ntype State = {\n  goods: string[]\n  start: boolean,\n  isReversed: boolean,\n  sortBy: string,\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}